* HTML - Hyper Text Markup Language
* Used to create web pages.

How to create a HTML document?
* Are basically text documents. But HTML uses .html extensions.

HTML Tags
* starts with < and ends with > are opening tags.
* Starts with </ and ends with > are closing tags. 

HTML Elements
* The opening tag, closing tag and the content inbetween them are together called HTML Elements.
* There exists some tags which don't require a closing tag. Such tags are called self closing tags. And such HTML Element is called Empty HTML element.

HTML Document structure
* <!DOCTYPE html> - version of HTML
* <html></html> - contains styles, scripts and the visible parts of the web page.
* <head></head> - contains the styles, scripts and instructions that are important for out document. only the title element of the head element is visible in the tab of the html page.
* <body></body> - Is the visible part of our web page.

Nesting
* one element in another Element
* Parent Element - Element containing another element.
* Child Element - Element contained inside another element.

HTML Attribute
* additional instructions for HTML elememts.
* eg: <p align="left"> Left text </p>
* syntax: [attribute_name]="[attribute_value]"

Common Attributes
* id - Allows to set an id to the HTML element.
* title - Allows to set the title of the HTML element. can be seen when we hover over the HTML element.
* class - Used to group element to style elements.
* style - Used to add styles available in the CSS.


HTML Paragraph and text formatting
* <P> tag allows us to crate a text Paragraph.
* This won't render additional spaces.
* </br> - breaks the line in a Paragraph. and the next word starts from a new line.
* <pre></pre> - preserves the formmatting in the text. i.e. all additional spaces and text written in a new line will be visible as it is written.
* <b></b> - bold text
* <i></i> - italic text
* <u></u> - underline text
* <strike></strike> - strikes the text
* <tt></tt> - mono text. which means the letters in each word will have same width.
* <sup></sup> - superscript. Text which appears slightly upper to other text.
* <sub></sub> - subscript. Text which appears slightly lower to other text.
* <big></big> - bigger than other text
* <small></small> - smaller than other text
* <mark></mark> - highlights the text


HTML Quotations
* <q></q> - for quotations marks
* <blockquote></blockquote> - for a large quotation for which we want to add source of quotation.
* <abbr></abbr> - for abbriviation
* <address></address> - for address and will be similar to italic.
* <cite></cite> - usually used for titling or naming some work. displayed similar to italics.
* <bdo></bdo> - BiDirectional Overide HTML Element - controls the directions of the text flow.


Display types
* Block Elements - start in new line and everything after it display in new line.
* Inline Element - which occuppy the necessary space. more than one inline elements in a line can be possible.
* <div></div> - block element to group elements.
* <span></span> - inline element to group elements.


Comments
* HTML elements that are not visible in the body.
* syntax: <!-- [content] -->
* used to helpful insights.
* single line comment - comment elemnts that is only one line of code.
* multi line comment - comment elements that extends to more than one line of code.



Headings
* Elements used to head the titles inside our web pages.
* 6 levels of headings - <h1></h1> to <h6></h6> - reduce the font size form 1 to 6.
* Used for SEO.



Lists
* used to handling array of data. 
* displays as list.
* list items are displayed using the <li></li> tag.
* <ul></ul> - unordered list - the order is not important, 
    => three types - square, disc and circle
* <ol></ol> - ordered list - the order of the items are important,
    => 5 types - 1, I, i, A, a
* <dl></dl> - description list - To handle the data with discription.
    => <dt></dt> - description title - title of the description.
    => <dd></dd> - description - description of the title.


Tables
* used to display tabular data
* basic syntax: 
    <table> 
        <tr>
            <td> </td>
        </tr>
    </table>
* height - height of the table
* width - width of the table
* cellpadding - space between cell content and cell border
* cellspacing - space between two cells
* colspan - merges more than one columns
* rowspan - merges more than one rows
* table sections - <thead></thead>, <tbody></tbody> and <tfoot></tfoot> 
* thead displays at the top of the table
* tbody displays at the middle of the table
* tfoot displays at the bottom of the table


Images
* <img/> - for adding Images
* it is a self closing tag
* src attribute - for the path of the image we want to display.
* alt attribute - text to display if the image cannot be loaded.
* border attribute - for setting the border of the image. the value is a number and its default measure is in px
* align attribute - for aligning the image. have values left, center or right


Links
* HTML links or hyperlinks are HTML elements that allows a user to navigate from one website to another.
* <a></a>
* href attribute - important attribute. The value is the location of the website to which we want to navigate to (destination page).
* target attribute - how to redirect to the new page. have 2 values:
    => _self -  redirection happens in the same tab
    => _blank - redirection happens in a new tab
* text link - text for redirection.
* image link - imge for redirection.
* email link - opens the mail app and initialise the mail with the given destination address.
    => <a href="malito:abc@xyz.com">email me</a>


Frames
* HTML elements to divide the screen in different section.
* created with <frameset></frameset> and <frame></frame> tags.
* <frameset></frameset> divide the screen space available in the website.
* imp attributes:
    => frameset:
        -> cols - divide our screen in columns. eg: <frameset cols="33%,*,300px">
        -> rows - divide our screen in rows. eg: <frameset rows="500,*">
    => frame:
        -> src - the path of the content for our frame.
        -> name - represent a unique name for our frame. this name can be used in the target property of anchor tag to load that site in this frame.
defects of using frames:
* Depricated from HTML5
* Acts weired in small devices
* Some browsers don't support frames.
* Also in some browsers back button doesn't work as it is intended.
how to cover frames failure:
* use the <noframes> HTML element.
* if for some reasons the frames are not loaded the the content in the noframes HTML element gets loaded.
* syntax:
    <frameset>
        <frame src="abc.xyz.com" name="name1">
        <noframes> 
            <body>
                content here
            </body>
        </noframes>
    </frameset>


HTML iframes
* It is a rectangular container where we can load another HTML document. 
* attribute:
 => src - path to the web document
 => frameborder - sets the border of the iframe.
 => width - width of the iframe
 => height - height of the iframe
 => marginwidth - distance b/w the frame and the content of the iframe on left and right sides.
 => marginheight - distance b/w the frame and the content of the iframe on the top and bottom.
 => scrolling - enables or disables scrolling in the iframes.



 Forms
 * HTML elements for get data from the website.
 * uses <form></from> tag and inside this element will have different form elements to fetch data.
 * From attributes: 
    => action - the path of the script for processing the data.
    => method - http method to send our data to the server for data processing. Common methods are get and post.
    => target - where to display the processed data. i.e. in the same tab or in different tab or in a frame etc...


Form Elements
* used to create HTML forms.
* common form elements:
 => <input> - It is a self closing element, used to create vcarious type of from elements like text field, password fields, submit buttons, radio buttons, checkboxes, etc.
 => <select> - used to create a dropdown list. The size attribute will determine the number of elements to be visible. multiple attribute defines that we can select more than one value in the dropdown list.
 => <option> - used inside select element for providing options for selection. value attribute's value is the value that will be selected by the select element. the selected attribute selects an initial value for the select element.
 => <textarea> - used to input multiline values. rows and cols attributes define the number of rows and columns that the textarea element should use. 
 => <button> - creates button. onclick attribute defines what to happen when the button is clicked. is will be javascript code to execute. type attribute defines what type of the button it should be. there are 3:
    -> button - simple button and we need to define a function for execution while clicking that button
    -> submit - takes values from the form and sends it to the defined location.
    -> reset - reset the form to initail values
 => <datalist> - it is a combination of the input text field and the dropdown list. when entering values into the input fields lists data which was previously set and we can select from it.
    -> syntax: 
        <input list="colors">
        <datalist id="colors">
            <option value="red">
            <option value="blue">
            <option value="green">
            <option value="yellow">
        </datalist>
    -> list attribute connects the input field to the datalist with the id same as of the list attribute value of the input field.


Input Element Types
* input elemnt are used to create various form input elements.
* attributes:
 => type - type of the input. i.e. text, password, radio, etc
 => name - for uniquely idetifying the input value. needed if values are to send to server.
 => value - value of the input field.
* have various types:
    => text - can input alpha numeric values
    => password - similar to text type but the values will be masked with bullets or asterisks on entering.
    => reset - for creating a reset button.
    => submit - for creating a submit button.
    => button - for creating a normal button. need and onclick attribute to let the button have a functionality.
    => radio - for creating radio buttons which enables us to select only one option from a list of available options. the name attribute of these element should be same for one group.
    => checkbox - for creating checkboxes which enables us to select more than one options.
    => file - for selecting the file in our system. the accept attribute restricts us to choose the defined file types only (eg: image/png).
    => image - for creating an image button. Functions similar to submit button.

Input element type in HTML5
* color - create a color picker.
* date - create a date picker.
* datetime-local - create a date picker with a time picker.
* email - create email input fields. only holds a valid email.
* month - create a month picker.
* number - create a number input field. only holds a valid number.
* range - create a range selector. min attribute defines the minimum value and max attribute defines the maximum value.
* search - creates a search input field. similar to text input field but behaves differently with the different attribute(autocomplete, list, maxlenght, minlength, pattern, placeholder, required, size) used.
* tel - creates input field to enter only valid telephone numbers. the validity is checked by the value set in the pattern attribute.
* time - creates time input field.
* url - creates input fields to enter only valid url address.
* week - creates a week picker.


Restricttion Attributes
* restricts default behaviour of the HTML elements.
* disabled - disabled the HTML elements. i.e. we can't use the element.
* readonly - makes the element read only. 
* required - makes the field compulsory to enter a value.
* size - makes the input field to restrict the visibility to the size.
* step - makes the input field valid for only steped value. eg: if the value="0" and step="5", then we can only enter values like 0, 5, 10, 15, etc.
* pattern - makes the input field valid for only the specified pattern.
* min - restricts the minimum value to enter into a field. only for input type="number".
* max - restricts the maximum value to enter into a field. only for input type="number".
* minlength - restricts the minimum number of characters to be entered into the field.
* maxlength - restricts the maximum number of characters to be entered into the field.